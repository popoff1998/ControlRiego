; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
description = Caja Control Riego
default_envs = DEVELOP_NodeMCU

; comun a todos los entornos:
[env]
platform = espressif8266 @ 3.2.0
;platform = espressif8266 @ 2.6.3
board = nodemcuv2
framework = arduino
monitor_speed = 115200
board_build.ldscript = eagle.flash.4m2m.ld ; 4m total = 1m sketch + 1m libres OTA + 2m filesystem
board_build.filesystem = littlefs
build_flags = 
	-D NODEMCU
	-D NEWPCB		; para la nueva PCB
    -D WEBSERVER	; para webserver	
	-Wno-sign-compare -Wno-reorder
	;-Wno-deprecated-declarations
lib_ignore = TimerOne
lib_deps = 
	ArduinoJson@~6
	arduino-libraries/NTPClient@3.1.0
	jchristensen/Timezone @ 1.2.4
	soligen2010/ClickEncoder @ 0.0.0-alpha+sha.9337a0c46c
	https://github.com/tzapu/WiFiManager @ ^2.0.5-beta

[env:RELEASE_NodeMCU]
build_flags = 
    ${env.build_flags}
    -D RELEASE		; para funcionamiento normal

[env:DEVELOP_NodeMCU]
monitor_filters = esp8266_exception_decoder
build_type = debug
build_flags = 
    ${env.build_flags}
    -D DEVELOP		; debug y traces activados	
	;-D DEBUG_ESP_PORT=Serial
	;-D DEBUG_ESP_WIFI
	;-D DEBUG_ESP_OTA
	;-D DEBUG_ESP_HTTP_CLIENT
    ;-D DEBUG_ESP_HTTP_SERVER

[env:DEMO_NodeMCU]
build_flags = 
    ${env.build_flags}
    -D DEMO		; modo demo sin red y con debug
