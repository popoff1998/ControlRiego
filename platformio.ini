; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
description = Caja Control Riego
default_envs = DEVELOP_ESP32

; comun a todos los entornos ESP32:
[env]
platform = espressif32
board = ESP32Dev
framework = arduino
monitor_speed = 115200
board_build.partitions = partitions_custom.csv  ;(1.9MB APP with OTA/190KB SPIFFS)
board_build.filesystem = littlefs
; change MCU frequency
;board_build.f_cpu = 240000000L
build_flags = 
	-D ESP32
    -D WEBSERVER	; para incluir webserver
    ;-D M3GRP	; opcion con boton multirriego + selector 3 grupos multirriego
	            ; por defecto 4GRP: 4 botones de grupos multirriego
	-Wno-sign-compare 
lib_deps = 
	bblanchon/ArduinoJson @ 6.21.5
	arduino-libraries/NTPClient @ 3.2.1
	jchristensen/Timezone @ 1.2.4
	https://github.com/igorantolic/ai-esp32-rotary-encoder @ 1.6.0
	https://github.com/tzapu/WiFiManager.git#v2.0.17
	hideakitai/DebugLog @ 0.8.3

[env:DEVELOP_ESP32]
monitor_filters = esp32_exception_decoder
build_type = debug
build_flags = 
    ${env.build_flags}
    -D DEVELOP		; debug y traces activados
	;-D MUTE		; sin sonidos	
	;-D noCHECK		; no hace encendido inicial de leds	
	;-D noWIFI		; no intenta conexion wifi y modo NONETWORK
	;-D DEBUGloops
	-D clean_FS=0	; =1 borra file system
	-D CORE_DEBUG_LEVEL=3
	;-D CORE_DEBUG_LEVEL=5
	;-DWM_DEBUG_LEVEL=4 -DDEBUG_ESP_CORE -DDEBUG_ESP_WIFI -DCORE_DEBUG_LEVEL=5
[env:RELEASE_ESP32]
build_type = release
build_flags = 
    ${env.build_flags}
    -D RELEASE		; debug y traces desactivados	
	-D clean_FS=0	; =1 borra file system
